{"version":3,"sources":["actions/fetchAction.js","components/Answers/styles.jsx","components/Correct/correct.js","actions/counterActions.js","components/Answers/answers.js","App.js","reportWebVitals.js","reducers/fetchReducer.js","reducers/rootReducer.js","reducers/counterReducer.js","index.js"],"names":["FETCH_POSTS","endpoint","AnswersBLock","styled","div","Li","li","button","Correct","quiz","color","setColor","dispatch","useDispatch","Object","keys","correct_answers","map","cor","correct","class","type","style","backgroundColor","onClick","event","target","console","log","alert","isCorrect","Answers","answers","ans","idx","finalAnswer","flexDirection","justifyContent","App","useSelector","state","fetchQuiz","fetchedPosts","counter","counterQuiz","useState","className","a","fetch","response","json","payload","q","question","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","iteratedAnswers","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c821a3c4.chunk.js","sourcesContent":["export const FETCH_POSTS = 'POST/FETCH_POSTS'\nexport const ITERATE_ANSWERS = 'POST/ITERATE_ANSWERS'\n\nconst url = 'https://quizapi.io/api/v1/questions'\n  const apiKey='JvAi9cMLcqB3etPH9J91pECRIsrgeuvZW7qbwrda'\n  const limit = 5;\n  const category= 'Code';\n  const endpoint = `${url}?apiKey=${apiKey}&limit=${limit}&category=${category}`;\n\nexport function loadQuiz() {\n    return async dispatch => {\n        const response = await fetch(endpoint)\n        const json = await response.json()\n        dispatch({ type: FETCH_POSTS, payload: json })\n  }\n}\n\n\n\n// export function iterateAnswers() {\n//     return async dispatch => {\n//         quiz.map( (qui,idx) => {\n//           const output = await quiz[qui]\n//         }\n//         dispatch({ type: ITERATE_ANSWERS, payload:  })\n//   }\n// }","import styled from 'styled-components';\n\nexport const AnswersBLock = styled.div`\n  width: 25vw;\n  min-width: 330px;\n  border: 2px solid #DADADA;\n  border-radius: 30px;s\n  margin: 10px;\n  background-color: white;\n  &:hover {\n    background-color: ;\n  }\n  &:active {\n    background-color: ;\n  }\n`;\n\nexport const Li = styled.li`\n    list-style-type: none;\n    background-color: #dbb1b1;\n    border: 1px solid;\n    border-radius: 30px;\n    padding: 5px;\n    margin: auto;\n    &:hover {\n      background-color: purple ;\n    }\n    &:active {\n      background-color: purple ;\n    }\n  `;\n\n  export const Button = styled.button`\n  height: 15px;\n  width: 15px;\n  border: 1px solid;\n  margin-right: auto;\n  margin-top: auto;\n  margin-bottom: auto;\n  `\n  ","import React from \"react\";\nimport { decrement, increment } from \"../../actions/counterActions\"\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const Correct = ({quiz,color, setColor}) => {\n    const dispatch = useDispatch();\n\n    const isCorrect = (event,correct) => {\n        if (correct===\"true\"){\n            event.target.color = setColor(\"green\");\n            dispatch(increment())\n            console.log()\n    \n        }\n        else if (correct===\"false\") {\n            event.target.color =setColor(\"red\");\n          dispatch(decrement())\n          console.log()\n        } else {\n            alert(\"noth\")\n        }\n    }\n\n    return(\n        <>\n        {Object.keys(quiz.correct_answers).map((cor) => {\n            let correct = quiz.correct_answers[cor];\n            return (\n                 <label class=\"container\"  >{correct}\n                     <input type=\"checkbox\" style={{backgroundColor: color}} />\n                     <span class=\"checkmark\" onClick={(event) => isCorrect(event,correct)}></span>\n                 </label>\n                 );\n            })}\n         </>\n    );\n}","export const increment = () => {\n    return {\n        type: 'INCREMENT'\n    };\n};\n\nexport const decrement = () => {\n    return {\n        type: 'DECREMENT'\n    }\n};","import React from \"react\";\nimport Flexbox from \"react-flexbox\";\nimport {useState } from 'react';\nimport * as S from './styles';\nimport './answers.css';\nimport {Correct} from \"../Correct/correct\"\n\nexport const Answers = ({quiz,color}) => {\n\n\nreturn (\n    <S.AnswersBLock>    \n    {Object.keys(quiz.answers).map((ans, idx) => {\n        let finalAnswer = quiz.answers[ans]\n            if (finalAnswer!==null) {  \n       return (\n               <ul key={idx}>\n                   <S.Li style={{backgroundColor: color}}>\n                        <Flexbox flexDirection=\"row\" justifyContent=\"flex-start\">\n                            {finalAnswer}\n                        </Flexbox>\n                    </S.Li>\n               </ul>\n            );\n      }\n    })}\n    </S.AnswersBLock>\n    );\n}\n        ","import { useDispatch, useSelector } from \"react-redux\";\nimport './App.css';\nimport {loadQuiz}   from \"./actions/fetchAction\";\nimport Flexbox from \"react-flexbox\";\nimport {useState} from \"react\";\n\nimport {Answers} from \"./components/Answers/answers\";\nimport {Correct} from \"./components/Correct/correct\";\n\n\n\n\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const quiz = useSelector(state => state.fetchQuiz.fetchedPosts);\n  const counter = useSelector(state => state.counterQuiz)\n  const [color, setColor] = useState(\"\")\n  const [finalCorrect, setFinalCorrect] = useState();\n\n  const mark = () => {\n\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <button\n        className='LoadButton' \n        onClick={() => dispatch(loadQuiz())}\n        > \n        Download quiz\n        </button>\n        <div className=\"title\">Quiz\n        </div>\n        <div className=\"score\">Score\n          <span>{counter}</span>\n        </div>\n      </header>\n      {quiz.map( (q,idx) => (\n        <div key={q.id} className=\"quiz-blocks\">\n         <h5 className=\"questions\" key={q.id}>{q.question}</h5>\n          <div className=\"quiz-blocks\">\n            <Answers quiz={quiz[idx]} color={color}/>\n            <Correct quiz={quiz[idx]} setColor={setColor} color={color}/>\n          </div>\n         </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {FETCH_POSTS} from '../actions/fetchAction';\n\nconst initialState = {\n  fetchedPosts: [],\n  iteratedAnswers: []\n}\n\nexport const fetchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POSTS:\n      return { ...state, fetchedPosts: action.payload }\n    default: return state\n  }\n   \n}\n\n\n","import {combineReducers} from 'redux'\nimport {fetchReducer} from './fetchReducer'\nimport {counterReducer} from './counterReducer'\n\nexport const rootReducer = combineReducers({\n  fetchQuiz: fetchReducer,\n  counterQuiz: counterReducer,\n  // iterateQuiz: iteratedReducer\n})","import {decrement,increment} from '../actions/counterActions';\n\nexport const counterReducer = (state = 0, action) => {\n    switch(action.type){\n        case \"INCREMENT\":\n            return state + 1;\n        case \"DECREMENT\":\n            return state - 1;\n        default: \n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore,compose,applyMiddleware} from 'redux';\nimport {rootReducer} from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()   \n))\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}